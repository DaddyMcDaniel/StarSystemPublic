#!/usr/bin/env bash
set -euo pipefail

# Unified launcher for the mini-planet pipeline
# Usage:
#   commands/LOP_miniplanet --config planet_configs/hero_planet_config.json --view

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
cd "$ROOT_DIR"

CONFIG=""
VIEW=""
QUICK=""
SEED=""

while [[ $# -gt 0 ]]; do
  case "$1" in
    --config)
      CONFIG="$2"; shift 2;;
    --view)
      VIEW="--view"; shift;;
    --quick)
      QUICK="--quick"; shift;;
    --seed)
      SEED="--seed $2"; shift 2;;
    *)
      echo "Unknown arg: $1"; exit 1;;
  esac
done

PYTHON="${PYTHON:-python3}"

# Extract seed value for Agent D
SEED_VALUE="42"  # default
if [[ -n "$SEED" ]]; then
  SEED_VALUE=$(echo "$SEED" | sed 's/--seed //')
fi

# Generate output filename with timestamp and seed
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
OUTPUT_FILE="generated_planets/miniplanet_seed_${SEED_VALUE}_${TIMESTAMP}.json"

echo "üåç Generating mini-planet with seed: $SEED_VALUE"

# Use unified system (replaces Agent D and create_mini_planet.py)
$PYTHON unified_miniplanet.py --seed "$SEED_VALUE"
OUTPUT_FILE="unified_planet_seed_${SEED_VALUE}.json"

if [[ -n "$VIEW" ]]; then
  echo "üéÆ Launching viewer..."
  $PYTHON renderer/pcc_game_viewer.py "$OUTPUT_FILE"
fi


