/*
SUMMARY: Performance Pass Schema v1
====================================
Defines performance validation results with budget metrics and badge output for StarSystem builds.
Evaluates build quality against performance budgets and awards achievement badges.

KEY COMPONENTS:
- metrics: Measured performance values (tri_count, memory, etc.)
- budget_status: Pass/fail against defined budgets
- badges: Achievement awards for performance milestones
- recommendations: Optimization suggestions and next steps

USAGE:
- Generated by tools.validators.performance_pass during validation
- Provides performance feedback and optimization guidance
- Awards badges for exceptional performance achievements
- Saved to runs/{run_id}/performance_pass.json

RELATED FILES:
- tools: validators.performance_pass
- artifacts: runs/{run_id}/performance_pass.json
- config: budgets and thresholds defined in gates configuration
*/

{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "urn:starsystem:schema:performance_pass:v1",
  "version": 1,
  "title": "Performance Pass Schema",
  "description": "Performance validation results with budget metrics and achievement badges",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "metrics": {
      "type": "object",
      "description": "Measured performance values",
      "additionalProperties": false,
      "properties": {
        "tri_count": {"type": "integer", "minimum": 0},
        "materials": {"type": "integer", "minimum": 0},
        "texture_memory_mb": {"type": "number", "minimum": 0},
        "draw_calls": {"type": "integer", "minimum": 0},
        "build_time_ms": {"type": "integer", "minimum": 0},
        "memory_peak_mb": {"type": "number", "minimum": 0},
        "fps_average": {"type": "number", "minimum": 0},
        "load_time_ms": {"type": "integer", "minimum": 0}
      }
    },
    "budget_status": {
      "type": "object",
      "description": "Pass/fail results against performance budgets",
      "additionalProperties": false,
      "properties": {
        "overall_pass": {"type": "boolean"},
        "individual_results": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "measured": {"type": "number"},
              "budget": {"type": "number"},
              "passed": {"type": "boolean"},
              "margin_percent": {"type": "number"}
            }
          }
        },
        "violations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "metric": {"type": "string"},
              "measured": {"type": "number"},
              "budget": {"type": "number"},
              "excess_percent": {"type": "number"}
            }
          }
        }
      },
      "required": ["overall_pass"]
    },
    "badges": {
      "type": "array",
      "description": "Achievement awards for performance milestones",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {"type": "string"},
          "tier": {"type": "string", "enum": ["bronze", "silver", "gold", "platinum"]},
          "category": {"type": "string", "enum": ["efficiency", "optimization", "innovation", "quality"]},
          "description": {"type": "string"},
          "metric_achievement": {"type": "string"},
          "awarded_at": {"type": "string", "format": "date-time"}
        },
        "required": ["name", "tier", "category"]
      }
    },
    "recommendations": {
      "type": "array",
      "description": "Optimization suggestions and next steps",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "priority": {"type": "string", "enum": ["critical", "high", "medium", "low"]},
          "category": {"type": "string", "enum": ["geometry", "materials", "lighting", "code", "architecture"]},
          "suggestion": {"type": "string"},
          "potential_savings": {"type": "string"},
          "effort_estimate": {"type": "string", "enum": ["low", "medium", "high"]}
        },
        "required": ["priority", "category", "suggestion"]
      }
    },
    "metadata": {
      "type": "object",
      "description": "Validation context and timing",
      "additionalProperties": false,
      "properties": {
        "validated_at": {"type": "string", "format": "date-time"},
        "validator_version": {"type": "string"},
        "platform": {"type": "string"},
        "test_duration_ms": {"type": "integer", "minimum": 0},
        "seed_used": {"type": "integer", "minimum": 0}
      },
      "required": ["validated_at", "seed_used"]
    }
  },
  "required": ["metrics", "budget_status", "metadata"]
}